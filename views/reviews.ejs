<%# Fungsi helper untuk mendapatkan inisial dari nama %>
<%
    const getInitials = (fullName) => {
        if (!fullName) return 'A';
        const names = fullName.split(' ');
        let initials = names[0].charAt(0);
        if (names.length > 1) {
            initials += names[names.length - 1].charAt(0);
        }
        return initials.toUpperCase();
    };
%>

<%- include('partials/header', { title: 'Data Penilaian' }) %>
<%- include('partials/sidebar') %>

<style>
    .main-content {
    margin-left: 260px;
    width: calc(100% - 260px);
    padding: 40px;
    box-sizing: border-box;
    }
    .review-panel {
        background-color: white;
        border-radius: 20px;
        padding: 30px;
        box-shadow: 0 8px 25px rgba(0,0,0,0.07);
    }
    .panel-header h1 {
        font-size: 1.8rem;
        margin-top: 0;
        margin-bottom: 5px;
        color: #333;
    }
    .panel-header p {
        color: #777;
        margin-bottom: 30px;
    }
    .review-item {
        border: 1px solid #f0f0f0;
        border-radius: 15px;
        padding: 20px;
        margin-bottom: 15px;
        display: flex;
        gap: 20px;
        align-items: flex-start;
    }
    .review-item:last-child {
        margin-bottom: 0;
    }
    .avatar-container {
        flex-shrink: 0;
    }
    .avatar {
        width: 45px;
        height: 45px;
        border-radius: 50%;
        object-fit: cover;
    }
    .avatar-initial {
        width: 45px;
        height: 45px;
        border-radius: 50%;
        background-color: #ffe8dc;
        color: #ff8c42;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 1.2em;
        font-weight: bold;
    }
    .review-content {
        flex-grow: 1;
    }
    .review-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 8px;
    }
    .reviewer-info strong {
        display: block;
        color: #3A3A3A;
    }
    .stars {
        color: #ffc107;
        font-size: 1em;
    }
    .review-comment {
        color: #555;
        font-size: 0.95em;
        line-height: 1.6;
    }
    .delete-btn {
        background: none;
        border: none;
        cursor: pointer;
        opacity: 0.5;
        transition: opacity 0.2s ease;
    }
    .delete-btn:hover {
        opacity: 1;
    }
    .delete-btn svg {
        width: 20px;
        height: 20px;
        stroke: #888;
    }
    .modal-overlay {
        position: fixed; top: 0; left: 0; width: 100%; height: 100%;
        background-color: rgba(0, 0, 0, 0.5); backdrop-filter: blur(5px);
        display: flex; justify-content: center; align-items: center; z-index: 1000;
        opacity: 0; visibility: hidden; transition: opacity 0.3s ease;
    }
    .modal-overlay.show {
        opacity: 1; visibility: visible;
    }
    .modal-content {
        background: white; padding: 30px; border-radius: 15px;
        text-align: center; width: 90%; max-width: 380px;
        transform: scale(0.9); transition: transform 0.3s ease;
    }
    .modal-overlay.show .modal-content {
        transform: scale(1);
    }
    .modal-content h3 {
        margin-top: 0; font-size: 1.2rem; color: #333;
    }
    .modal-actions {
        margin-top: 25px; display: flex; gap: 15px;
    }
    .btn {
        flex: 1; padding: 12px; border-radius: 8px; border: none;
        font-size: 1em; font-weight: 600; cursor: pointer; transition: background-color 0.2s ease;
    }
    .btn-confirm { background-color: #ff8c42; color: white; }
    .btn-confirm:hover { background-color: #e07a38; }
    .btn-cancel { background-color: #eee; color: #555; }
    .btn-cancel:hover { background-color: #ddd; }
    .btn-confirm {
        padding: 12px 28px;
        border: none;
        border-radius: 8px;
        background-color: #ff8c42;
        color: white;
        font-weight: 600;
        font-size: 0.95em;
        cursor: pointer;
        transition: background-color 0.2s ease;
    }
    .btn-confirm:hover {
        background-color: #e07a38;
    }
</style>

<div class="review-panel">
    <div class="panel-header">
        <h1>Data Penilaian</h1>
        <div style="margin-bottom:15px; text-align:right;">
        <button id="btnReportReviews" class="btn-confirm">Download Report Review</button>
        </div>
        <p>Kelola semua ulasan yang diberikan oleh pelanggan Anda.</p>
    </div>
    
    <div class="reviews-list">
        <% if (reviews.length > 0) { %>
            <% reviews.forEach(review => { %>
                <div class="review-item" id="review-<%= review.id %>">
                    <div class="avatar-container">
                        <% if (review.avatar_url && review.avatar_url.startsWith('http')) { %>
                            <img src="<%= review.avatar_url %>" alt="Avatar" class="avatar">
                        <% } else { %>
                            <div class="avatar-initial"><%= getInitials(review.reviewer_name) %></div>
                        <% } %>
                    </div>
                    <div class="review-content">
                        <div class="review-header">
                            <div class="reviewer-info">
                                <strong><%= review.reviewer_name %></strong>
                                <div class="stars">
                                    <% const starCount = Math.round(review.total_score / 20); %>
                                    <% for(let i = 0; i < 5; i++) { %>
                                        <span><%= i < starCount ? '★' : '☆' %></span>
                                    <% } %>
                                </div>
                            </div>
                            <button title="Hapus Ulasan" class="delete-btn" data-id="<%= review.id %>">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path><line x1="10" y1="11" x2="10" y2="17"></line><line x1="14" y1="11" x2="14" y2="17"></line></svg>
                            </button>
                        </div>
                        <p class="review-comment"><%= review.comment %></p>
                    </div>
                </div>
            <% }) %>
        <% } else { %>
            <p>Belum ada ulasan yang masuk.</p>
        <% } %>
    </div>
</div>

<div id="delete-modal" class="modal-overlay">
    <div class="modal-content">
        <h3>Yakin untuk menghapus komentar?</h3>
        <div class="modal-actions">
            <button id="cancel-delete-btn" class="btn btn-cancel">Batal</button>
            <button id="confirm-delete-btn" class="btn btn-confirm">Yakin</button>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const reviewsList = document.querySelector('.reviews-list');
        const modal = document.getElementById('delete-modal');
        const confirmDeleteBtn = document.getElementById('confirm-delete-btn');
        const cancelDeleteBtn = document.getElementById('cancel-delete-btn');
        let reviewIdToDelete = null;

        reviewsList.addEventListener('click', (event) => {
            const deleteButton = event.target.closest('.delete-btn');
            if (deleteButton) {
                reviewIdToDelete = deleteButton.dataset.id;
                modal.classList.add('show');
            }
        });

        const hideModal = () => {
            modal.classList.remove('show');
            reviewIdToDelete = null;
        };

        cancelDeleteBtn.addEventListener('click', hideModal);
        modal.addEventListener('click', (event) => {
            if (event.target === modal) {
                hideModal();
            }
        });

        confirmDeleteBtn.addEventListener('click', async () => {
            if (!reviewIdToDelete) return;

            try {
                const response = await fetch(`/reviews/${reviewIdToDelete}`, {
                    method: 'DELETE',
                });
                const result = await response.json();

                if (result.success) {
                    const reviewCard = document.getElementById(`review-${reviewIdToDelete}`);
                    if (reviewCard) {
                        reviewCard.remove();
                    }
                } else {
                    alert('Gagal menghapus ulasan: ' + result.message);
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Terjadi kesalahan. Silakan coba lagi.');
            } finally {
                hideModal();
            }
        });
    });
</script>
<!-- === Report Script: Reviews (Daftar Ulasan) === -->
<script>
(async function attachReviewsReport() {
  function loadOnce(src) {
    return new Promise((resolve, reject) => {
      if ([...document.scripts].some(s => s.src.includes(src))) return resolve();
      const el = document.createElement('script');
      el.src = src; el.onload = resolve; el.onerror = reject;
      document.head.appendChild(el);
    });
  }
  if (!window.jspdf) {
    await loadOnce('https://cdn.jsdelivr.net/npm/jspdf@2.5.1/dist/jspdf.umd.min.js');
  }
  if (!window.jspdf?.jsPDF?.API?.autoTable) {
    await loadOnce('https://cdn.jsdelivr.net/npm/jspdf-autotable@3.8.3/dist/jspdf.plugin.autotable.min.js');
  }
  if (!window.ReportBase) {
    await loadOnce('/js/report-base.js');
  }

  // Ambil data reviews yang memang ada di halaman ini
  let __reviews = [];
  try { __reviews = JSON.parse('<%- JSON.stringify(reviews || []) %>'); } catch (e) { __reviews = []; }

  async function downloadReportReviews() {
    const doc = await ReportBase.createDoc();
    let y = await ReportBase.addHeader(doc);
    y = ReportBase.addTitle(doc, 'Report Daftar Review Pelanggan', y + 6);

    const rows = (__reviews.length ? __reviews : [{ reviewer_name: '-', total_score: 0, comment: 'Belum ada ulasan' }]).map(r => [
      r.reviewer_name,
      `${Math.round((r.total_score || 0)/20)} / 5`,
      r.comment || '-'
    ]);

    ReportBase.addTable(
      doc,
      ['Nama Reviewer','Rating','Komentar'],
      rows,
      y + 4,
      { 2: { cellWidth: 120 } } // kolom komentar lebih lebar
    );

    ReportBase.addSignature(doc);
    ReportBase.save(doc, 'report-reviews.pdf');
  }

  // Hubungkan ke tombol HTML
  document.getElementById('btnReportReviews')?.addEventListener('click', downloadReportReviews);

  // (Opsional) Shortcut
  document.addEventListener('keydown', (e) => {
    if (e.altKey && e.shiftKey && (e.key === 'R' || e.key === 'r')) { e.preventDefault(); downloadReportReviews(); }
  });

  window.downloadReportReviews = downloadReportReviews;
})();
</script>
<%- include('partials/footer') %>